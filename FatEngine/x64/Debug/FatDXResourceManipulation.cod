; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24213.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	__pobjectentryfirst
PUBLIC	__pobjectentrymid
PUBLIC	__pobjectentrylast
PUBLIC	?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients0
PUBLIC	?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients1
PUBLIC	?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients0
PUBLIC	?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients1
PUBLIC	?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients0
PUBLIC	?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients1
PUBLIC	?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients2
PUBLIC	?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients0
PUBLIC	?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients1
PUBLIC	?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients0
PUBLIC	?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients1
PUBLIC	?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients0
PUBLIC	?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients1
PUBLIC	?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanEstCoefficients
PUBLIC	?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcEstCoefficients
PUBLIC	?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMPiConstants0
PUBLIC	?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR0
PUBLIC	?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR1
PUBLIC	?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR2
PUBLIC	?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR3
PUBLIC	?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR0
PUBLIC	?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR1
PUBLIC	?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR2
PUBLIC	?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR3
PUBLIC	?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegativeZero
PUBLIC	?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMNegate3
PUBLIC	?g_XMMask3@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMask3
PUBLIC	?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskX
PUBLIC	?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskY
PUBLIC	?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskZ
PUBLIC	?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskW
PUBLIC	?g_XMOne@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne
PUBLIC	?g_XMOne3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne3
PUBLIC	?g_XMZero@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMZero
PUBLIC	?g_XMTwo@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwo
PUBLIC	?g_XMFour@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMFour
PUBLIC	?g_XMSix@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMSix
PUBLIC	?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOne
PUBLIC	?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOneHalf
PUBLIC	?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOneHalf
PUBLIC	?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeTwoPi
PUBLIC	?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativePi
PUBLIC	?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMHalfPi
PUBLIC	?g_XMPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMPi
PUBLIC	?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalPi
PUBLIC	?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwoPi
PUBLIC	?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalTwoPi
PUBLIC	?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMEpsilon
PUBLIC	?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMInfinity
PUBLIC	?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMQNaN
PUBLIC	?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMQNaNTest
PUBLIC	?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMAbsMask
PUBLIC	?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMin
PUBLIC	?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMax
PUBLIC	?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegOneMask
PUBLIC	?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskA8R8G8B8
PUBLIC	?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMFlipA8R8G8B8
PUBLIC	?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA8R8G8B8
PUBLIC	?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA8R8G8B8
PUBLIC	?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskA2B10G10R10
PUBLIC	?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMFlipA2B10G10R10
PUBLIC	?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA2B10G10R10
PUBLIC	?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA2B10G10R10
PUBLIC	?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskX16Y16
PUBLIC	?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipX16Y16
PUBLIC	?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16
PUBLIC	?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNormalizeX16Y16
PUBLIC	?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B ; DirectX::g_XMMaskX16Y16Z16W16
PUBLIC	?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMFlipX16Y16Z16W16
PUBLIC	?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16Z16W16
PUBLIC	?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeX16Y16Z16W16
PUBLIC	?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNoFraction
PUBLIC	?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskByte
PUBLIC	?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateX
PUBLIC	?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateY
PUBLIC	?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateZ
PUBLIC	?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateW
PUBLIC	?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect0101
PUBLIC	?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1010
PUBLIC	?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMOneHalfMinusEpsilon
PUBLIC	?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1000
PUBLIC	?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1100
PUBLIC	?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1110
PUBLIC	?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1011
PUBLIC	?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16
PUBLIC	?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16W16
PUBLIC	?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipY
PUBLIC	?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipZ
PUBLIC	?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipW
PUBLIC	?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipYZ
PUBLIC	?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipZW
PUBLIC	?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipYW
PUBLIC	?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskDec4
PUBLIC	?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMXorDec4
PUBLIC	?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddUDec4
PUBLIC	?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMAddDec4
PUBLIC	?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMulDec4
PUBLIC	?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskByte4
PUBLIC	?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMXorByte4
PUBLIC	?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddByte4
PUBLIC	?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixUnsigned
PUBLIC	?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxInt
PUBLIC	?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxUInt
PUBLIC	?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMUnsignedFix
PUBLIC	?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMsrgbScale
PUBLIC	?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA
PUBLIC	?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA1
PUBLIC	?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMExponentBias
PUBLIC	?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMSubnormalExponent
PUBLIC	?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNumTrailing
PUBLIC	?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMinNormal
PUBLIC	?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegInfinity
PUBLIC	?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMNegQNaN
PUBLIC	?g_XMBin128@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMBin128
PUBLIC	?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMBinNeg150
PUBLIC	?g_XM253@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XM253
PUBLIC	?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst1
PUBLIC	?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst2
PUBLIC	?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst3
PUBLIC	?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst4
PUBLIC	?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst5
PUBLIC	?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst6
PUBLIC	?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst7
PUBLIC	?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst0
PUBLIC	?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst1
PUBLIC	?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst2
PUBLIC	?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst3
PUBLIC	?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst4
PUBLIC	?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst5
PUBLIC	?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst6
PUBLIC	?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst7
PUBLIC	?g_XMLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLgE
PUBLIC	?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMInvLgE
PUBLIC	?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B ; Microsoft::WRL::DefaultDelegateCheckMode
;	COMDAT ?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B
CONST	SEGMENT
?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B DD 01H ; Microsoft::WRL::DefaultDelegateCheckMode
CONST	ENDS
;	COMDAT ?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B DD 03f317218r ; 0.693147 ; DirectX::g_XMInvLgE
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?g_XMLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLgE@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa3br ; 1.4427 ; DirectX::g_XMLgE
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
CONST	ENDS
;	COMDAT ?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B DD 0bc2d4f59r ; -0.010578 ; DirectX::g_XMLogEst7
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
CONST	ENDS
;	COMDAT ?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B DD 03d6a1405r ; 0.057148 ; DirectX::g_XMLogEst6
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
CONST	ENDS
;	COMDAT ?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B DD 0be153261r ; -0.1457 ; DirectX::g_XMLogEst5
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
CONST	ENDS
;	COMDAT ?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B DD 03e7e8e61r ; 0.24859 ; DirectX::g_XMLogEst4
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
CONST	ENDS
;	COMDAT ?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B DD 0beb359der ; -0.350295 ; DirectX::g_XMLogEst3
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
CONST	ENDS
;	COMDAT ?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B DD 03ef571d2r ; 0.479384 ; DirectX::g_XMLogEst2
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
CONST	ENDS
;	COMDAT ?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf38a351r ; -0.721242 ; DirectX::g_XMLogEst1
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
CONST	ENDS
;	COMDAT ?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa2ar ; 1.44269 ; DirectX::g_XMLogEst0
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
CONST	ENDS
;	COMDAT ?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B DD 0b7364261r ; -1.08635e-05 ; DirectX::g_XMExpEst7
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
CONST	ENDS
;	COMDAT ?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B DD 0391aa7d7r ; 0.000147491 ; DirectX::g_XMExpEst6
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
CONST	ENDS
;	COMDAT ?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B DD 0baae1854r ; -0.00132824 ; DirectX::g_XMExpEst5
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
CONST	ENDS
;	COMDAT ?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B DD 03c1d8c54r ; 0.00961598 ; DirectX::g_XMExpEst4
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
CONST	ENDS
;	COMDAT ?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B DD 0bd6357car ; -0.0555036 ; DirectX::g_XMExpEst3
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
CONST	ENDS
;	COMDAT ?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B DD 03e75fdedr ; 0.240226 ; DirectX::g_XMExpEst2
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
CONST	ENDS
;	COMDAT ?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf317218r ; -0.693147 ; DirectX::g_XMExpEst1
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
CONST	ENDS
;	COMDAT ?g_XM253@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XM253@DirectX@@3UXMVECTORI32@1@B DD 0fdH		; DirectX::g_XM253
	DD	0fdH
	DD	0fdH
	DD	0fdH
CONST	ENDS
;	COMDAT ?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B DD 0c3160000H	; DirectX::g_XMBinNeg150
	DD	0c3160000H
	DD	0c3160000H
	DD	0c3160000H
CONST	ENDS
;	COMDAT ?g_XMBin128@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMBin128@DirectX@@3UXMVECTORI32@1@B DD 043000000H	; DirectX::g_XMBin128
	DD	043000000H
	DD	043000000H
	DD	043000000H
CONST	ENDS
;	COMDAT ?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B DD 0ffc00000H	; DirectX::g_XMNegQNaN
	DD	0ffc00000H
	DD	0ffc00000H
	DD	0ffc00000H
CONST	ENDS
;	COMDAT ?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B DD 0ff800000H ; DirectX::g_XMNegInfinity
	DD	0ff800000H
	DD	0ff800000H
	DD	0ff800000H
CONST	ENDS
;	COMDAT ?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMMinNormal
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B DD 017H	; DirectX::g_XMNumTrailing
	DD	017H
	DD	017H
	DD	017H
CONST	ENDS
;	COMDAT ?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B DD 0ffffff82H ; DirectX::g_XMSubnormalExponent
	DD	0ffffff82H
	DD	0ffffff82H
	DD	0ffffff82H
CONST	ENDS
;	COMDAT ?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B DD 07fH	; DirectX::g_XMExponentBias
	DD	07fH
	DD	07fH
	DD	07fH
CONST	ENDS
;	COMDAT ?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B DD 03f870a3dr ; 1.055 ; DirectX::g_XMsrgbA1
	DD	03f870a3dr			; 1.055
	DD	03f870a3dr			; 1.055
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B DD 03d6147aer ; 0.055 ; DirectX::g_XMsrgbA
	DD	03d6147aer			; 0.055
	DD	03d6147aer			; 0.055
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B DD 0414eb852r ; 12.92 ; DirectX::g_XMsrgbScale
	DD	0414eb852r			; 12.92
	DD	0414eb852r			; 12.92
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+09 ; DirectX::g_XMUnsignedFix
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B DD 04f7fffffr ; 4.29497e+09 ; DirectX::g_XMMaxUInt
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
CONST	ENDS
;	COMDAT ?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B DD 04effffffr ; 2.14748e+09 ; DirectX::g_XMMaxInt
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+09 ; DirectX::g_XMFixUnsigned
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B DD 0c3000000r ; -128 ; DirectX::g_XMAddByte4
	DD	0c7000000r			; -32768
	DD	0cb000000r			; -8.38861e+06
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B DD 080H	; DirectX::g_XMXorByte4
	DD	08000H
	DD	0800000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B DD 0ffH	; DirectX::g_XMMaskByte4
	DD	0ff00H
	DD	0ff0000H
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMMulDec4
	DD	03a800000r			; 0.000976563
	DD	035800000r			; 9.53674e-07
	DD	030800000r			; 9.31323e-10
CONST	ENDS
;	COMDAT ?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMAddDec4
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMAddUDec4
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B DD 0200H	; DirectX::g_XMXorDec4
	DD	080000H
	DD	020000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B DD 03ffH	; DirectX::g_XMMaskDec4
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipYW
	DD	080000000H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipZW
	DD	00H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipYZ
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipW
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipZ
	DD	00H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipY
	DD	080000000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16W16
	DD	03f800000r			; 1
	DD	037800000r			; 1.52588e-05
	DD	037800000r			; 1.52588e-05
CONST	ENDS
;	COMDAT ?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16
	DD	037800000r			; 1.52588e-05
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1011
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1110
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1100
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1000
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B DD 03efffffdH ; DirectX::g_XMOneHalfMinusEpsilon
	DD	03efffffdH
	DD	03efffffdH
	DD	03efffffdH
CONST	ENDS
;	COMDAT ?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1010
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B DD 00H	; DirectX::g_XMSelect0101
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateW
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateZ
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateY
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegateX
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B DD 0ffH	; DirectX::g_XMMaskByte
	DD	0ffH
	DD	0ffH
	DD	0ffH
CONST	ENDS
;	COMDAT ?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B DD 04b000000r ; 8.38861e+06 ; DirectX::g_XMNoFraction
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-05 ; DirectX::g_XMNormalizeX16Y16Z16W16
	DD	038000100r			; 3.05185e-05
	DD	030000100r			; 4.65675e-10
	DD	030000100r			; 4.65675e-10
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16Z16W16
	DD	0c7000000r			; -32768
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B DD 08000H ; DirectX::g_XMFlipX16Y16Z16W16
	DD	08000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B DD 0ffffH ; DirectX::g_XMMaskX16Y16Z16W16
	DD	0ffffH
	DD	0ffff0000H
	DD	0ffff0000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-05 ; DirectX::g_XMNormalizeX16Y16
	DD	030000100r			; 4.65675e-10
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B DD 08000H	; DirectX::g_XMFlipX16Y16
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B DD 0ffffH	; DirectX::g_XMMaskX16Y16
	DD	0ffff0000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 03b004020r ; 0.00195695 ; DirectX::g_XMNormalizeA2B10G10R10
	DD	036004020r			; 1.91108e-06
	DD	031004020r			; 1.86629e-09
	DD	02faaaaabr			; 3.10441e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMFixAA2B10G10R10
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B DD 0200H ; DirectX::g_XMFlipA2B10G10R10
	DD	080000H
	DD	020000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B DD 03ffH ; DirectX::g_XMMaskA2B10G10R10
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 033808081r ; 5.98384e-08 ; DirectX::g_XMNormalizeA8R8G8B8
	DD	037808081r			; 1.53186e-05
	DD	03b808081r			; 0.00392157
	DD	02f808081r			; 2.33744e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMFixAA8R8G8B8
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B DD 00H	; DirectX::g_XMFlipA8R8G8B8
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B DD 0ff0000H ; DirectX::g_XMMaskA8R8G8B8
	DD	0ff00H
	DD	0ffH
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMNegOneMask
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B DD 07f7fffffH	; DirectX::g_XMFltMax
	DD	07f7fffffH
	DD	07f7fffffH
	DD	07f7fffffH
CONST	ENDS
;	COMDAT ?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMFltMin
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B DD 07fffffffH	; DirectX::g_XMAbsMask
	DD	07fffffffH
	DD	07fffffffH
	DD	07fffffffH
CONST	ENDS
;	COMDAT ?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B DD 07fffffH	; DirectX::g_XMQNaNTest
	DD	07fffffH
	DD	07fffffH
	DD	07fffffH
CONST	ENDS
;	COMDAT ?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B DD 07fc00000H	; DirectX::g_XMQNaN
	DD	07fc00000H
	DD	07fc00000H
	DD	07fc00000H
CONST	ENDS
;	COMDAT ?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B DD 07f800000H	; DirectX::g_XMInfinity
	DD	07f800000H
	DD	07f800000H
	DD	07f800000H
CONST	ENDS
;	COMDAT ?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B DD 034000000r ; 1.19209e-07 ; DirectX::g_XMEpsilon
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
CONST	ENDS
;	COMDAT ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B DD 03e22f983r ; 0.159155 ; DirectX::g_XMReciprocalTwoPi
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B DD 040c90fdbr ; 6.28319 ; DirectX::g_XMTwoPi
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B DD 03ea2f983r ; 0.31831 ; DirectX::g_XMReciprocalPi
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMPi@DirectX@@3UXMVECTORF32@1@B DD 040490fdbr ; 3.14159 ; DirectX::g_XMPi
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdbr ; 1.5708 ; DirectX::g_XMHalfPi
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B DD 0c0490fdbr ; -3.14159 ; DirectX::g_XMNegativePi
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B DD 0c0c90fdbr ; -6.28319 ; DirectX::g_XMNegativeTwoPi
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
CONST	ENDS
;	COMDAT ?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMNegativeOneHalf
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
CONST	ENDS
;	COMDAT ?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B DD 03f000000r ; 0.5 ; DirectX::g_XMOneHalf
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
CONST	ENDS
;	COMDAT ?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegativeOne
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMSix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSix@DirectX@@3UXMVECTORF32@1@B DD 040c00000r ; 6	; DirectX::g_XMSix
	DD	040c00000r			; 6
	DD	040c00000r			; 6
	DD	040c00000r			; 6
CONST	ENDS
;	COMDAT ?g_XMFour@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFour@DirectX@@3UXMVECTORF32@1@B DD 040800000r ; 4	; DirectX::g_XMFour
	DD	040800000r			; 4
	DD	040800000r			; 4
	DD	040800000r			; 4
CONST	ENDS
;	COMDAT ?g_XMTwo@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwo@DirectX@@3UXMVECTORF32@1@B DD 040000000r ; 2	; DirectX::g_XMTwo
	DD	040000000r			; 2
	DD	040000000r			; 2
	DD	040000000r			; 2
CONST	ENDS
;	COMDAT ?g_XMZero@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMZero@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0	; DirectX::g_XMZero
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne3@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne3
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskW
	DD	00H
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskZ
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMaskX
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMask3@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMask3@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMask3
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B DD 080000000H	; DirectX::g_XMNegate3
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B DD 080000000H ; DirectX::g_XMNegativeZero
	DD	080000000H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR2
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR2
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B DD 040490fdbr ; 3.14159 ; DirectX::g_XMPiConstants0
	DD	040c90fdbr			; 6.28319
	DD	03ea2f983r			; 0.31831
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 03fc90da4r ; 1.57073 ; DirectX::g_XMArcEstCoefficients
	DD	0be593484r			; -0.212114
	DD	03d981627r			; 0.074261
	DD	0bc996e30r			; -0.0187293
CONST	ENDS
;	COMDAT ?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 0401ef9dbr ; 2.484 ; DirectX::g_XMTanEstCoefficients
	DD	0be482f23r			; -0.195492
	DD	0401de9e6r			; 2.4674
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bea91d04r ; -0.330299 ; DirectX::g_XMATanEstCoefficients1
	DD	03e3876e2r			; 0.180141
	DD	0bdae5a36r			; -0.085133
	DD	03caaae5fr			; 0.0208351
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f7ff738r ; 0.999866 ; DirectX::g_XMATanEstCoefficients0
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bd9a3174r ; -0.0752896 ; DirectX::g_XMATanCoefficients1
	DD	03d2fc1fer			; 0.0429096
	DD	0bc846e02r			; -0.0161657
	DD	03b3bd74ar			; 0.00286623
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0beaaaa6cr ; -0.333331 ; DirectX::g_XMATanCoefficients0
	DD	03e4cbbe5r			; 0.199936
	DD	0be117fc7r			; -0.142089
	DD	03dda3d83r			; 0.106563
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cfd10f8r ; 0.0308919 ; DirectX::g_XMArcCoefficients1
	DD	0bc8bfc66r			; -0.0170881
	DD	03bda90c5r			; 0.00667009
	DD	0baa57a2cr			; -0.00126249
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdar ; 1.5708 ; DirectX::g_XMArcCoefficients0
	DD	0be5bbfcar			; -0.214599
	DD	03db63a9er			; 0.088979
	DD	0bd4d8392r			; -0.0501743
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B DD 03a1aac12r ; 0.000590027 ; DirectX::g_XMTanCoefficients2
	DD	0397abeb9r			; 0.000239129
	DD	038cb3f0cr			; 9.69154e-05
	DD	03824bec9r			; 3.92783e-05
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cb327a4r ; 0.0218695 ; DirectX::g_XMTanCoefficients1
	DD	03c11371br			; 0.00886324
	DD	03b6b69e9r			; 0.00359213
	DD	03abed1b3r			; 0.00145583
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMTanCoefficients0
	DD	03eaaaaabr			; 0.333333
	DD	03e088889r			; 0.133333
	DD	03d5d0dd1r			; 0.0539683
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b48bdd11r ; -2.60516e-07 ; DirectX::g_XMCosCoefficients1
	DD	0befff67er			; -0.499927
	DD	03d29f587r			; 0.0414939
	DD	0baa69fdbr			; -0.00127124
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMCosCoefficients0
	DD	03d2aaaa3r			; 0.0416666
	DD	0bab609aar			; -0.00138884
	DD	037cfb4c2r			; 2.47605e-05
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b2cd365br ; -2.38899e-08 ; DirectX::g_XMSinCoefficients1
	DD	0be2aa888r			; -0.166659
	DD	03c08373cr			; 0.00831395
	DD	0b9423ec8r			; -0.000185247
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0be2aaaabr ; -0.166667 ; DirectX::g_XMSinCoefficients0
	DD	03c088886r			; 0.00833333
	DD	0b9500bf1r			; -0.000198409
	DD	03638b88er			; 2.75256e-06
CONST	ENDS
;	COMDAT __pobjectentrylast
minATL$__z	SEGMENT
__pobjectentrylast DQ 0000000000000000H
minATL$__z	ENDS
;	COMDAT __pobjectentrymid
minATL$__m	SEGMENT
__pobjectentrymid DQ 0000000000000000H
minATL$__m	ENDS
;	COMDAT __pobjectentryfirst
minATL$__a	SEGMENT
__pobjectentryfirst DQ 0000000000000000H
minATL$__a	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
PUBLIC	??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
PUBLIC	??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
PUBLIC	??C?$ComPtr@UID3D12Device@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Device@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Device>::operator->
PUBLIC	??C?$ComPtr@UID3D12GraphicsCommandList@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12GraphicsCommandList@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList>::operator->
PUBLIC	?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$T@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
PUBLIC	??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$QEAV012@@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
PUBLIC	??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
PUBLIC	??4?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAAEAV012@$$QEAV012@@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator=
PUBLIC	?Swap@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAXAEAV123@@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::Swap
PUBLIC	?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::Get
PUBLIC	??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Resource@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator->
PUBLIC	??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::ReleaseAndGetAddressOf
PUBLIC	?__autoclassinit2@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAX_K@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::__autoclassinit2
PUBLIC	?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z ; FatDXFramework::CreateGpuBuffer
PUBLIC	?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z ; FatDXFramework::CreateUploadBuffer
PUBLIC	?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z ; FatDXFramework::LoadDataToGpu
PUBLIC	?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z ; FatDXFramework::CopyDataToBuffer
PUBLIC	?ResourceStateTransition@FatDXFramework@@AEAAXAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@W4D3D12_RESOURCE_STATES@@1@Z ; FatDXFramework::ResourceStateTransition
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Resource@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >::operator void * __ptr64 * __ptr64
PUBLIC	??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Resource> >
PUBLIC	?__LINE__Var@?0??CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4JA ; `FatDXFramework::CreateGpuBuffer'::`1'::__LINE__Var
PUBLIC	_GUID_696442be_a72e_4059_bc79_5b5c98040fad
PUBLIC	??_C@_0CF@EDPCMKEP@Failed?5to?5create?5GPU?5buffer?5reso@ ; `string'
PUBLIC	??_C@_1LK@NMLGCBAA@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAh?$AAa?$AAe?$AAs?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2@ ; `string'
PUBLIC	??_C@_1FA@MEFELNMF@?$AA?$CB?$AA?$CC?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAG?$AAP?$AAU?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAr?$AAe@ ; `string'
PUBLIC	?__LINE__Var@?0??CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4JA ; `FatDXFramework::CreateUploadBuffer'::`1'::__LINE__Var
PUBLIC	??_C@_0CI@JEEPPCIG@Failed?5to?5create?5upload?5buffer?5r@ ; `string'
PUBLIC	??_C@_1FG@FMPOCDJG@?$AA?$CB?$AA?$CC?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAu?$AAp?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr@ ; `string'
PUBLIC	?__LINE__Var@?0??CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z@4JA ; `FatDXFramework::CopyDataToBuffer'::`1'::__LINE__Var
PUBLIC	??_C@_0CP@IIOIKGLG@Resources?5are?5not?5buffers?5or?5hav@ ; `string'
PUBLIC	??_C@_1GE@JAALOPNF@?$AA?$CB?$AA?$CC?$AAR?$AAe?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AAs?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AAs?$AA?5?$AAo?$AAr?$AA?5?$AAh@ ; `string'
EXTRN	??_M@YAXPEAX_K1P6AX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	??_V@YAXPEAX_K@Z:PROC				; operator delete[]
EXTRN	__imp__wassert:PROC
EXTRN	memcpy:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+114
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+217
	DD	imagerel $unwind$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$ComPtr@UID3D12Device@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Device@@@Details@12@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??C?$ComPtr@UID3D12Device@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Device@@@Details@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$ComPtr@UID3D12GraphicsCommandList@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12GraphicsCommandList@@@Details@12@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??C?$ComPtr@UID3D12GraphicsCommandList@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12GraphicsCommandList@@@Details@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ DD imagerel $LN4
	DD	imagerel $LN4+114
	DD	imagerel $unwind$?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$QEAV012@@Z DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$QEAV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAAEAV012@$$QEAV012@@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??4?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAAEAV012@$$QEAV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Swap@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAXAEAV123@@Z DD imagerel $LN3
	DD	imagerel $LN3+103
	DD	imagerel $unwind$?Swap@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAXAEAV123@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Resource@@@Details@12@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Resource@@@Details@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Resource@@XZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Resource@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?__autoclassinit2@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z DD imagerel $LN8
	DD	imagerel $LN8+536
	DD	imagerel $unwind$?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA DD imagerel ?dtor$0@?0??CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA
	DD	imagerel ?dtor$0@?0??CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z DD imagerel $LN8
	DD	imagerel $LN8+536
	DD	imagerel $unwind$?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA DD imagerel ?dtor$0@?0??CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA
	DD	imagerel ?dtor$0@?0??CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z DD imagerel $LN7
	DD	imagerel $LN7+386
	DD	imagerel $unwind$?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z@4HA DD imagerel ?dtor$0@?0??LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z@4HA
	DD	imagerel ?dtor$0@?0??LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z DD imagerel $LN7
	DD	imagerel $LN7+543
	DD	imagerel $unwind$?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ResourceStateTransition@FatDXFramework@@AEAAXAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@W4D3D12_RESOURCE_STATES@@1@Z DD imagerel $LN3
	DD	imagerel $LN3+244
	DD	imagerel $unwind$?ResourceStateTransition@FatDXFramework@@AEAAXAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@W4D3D12_RESOURCE_STATES@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Resource@@@23@@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$??0?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Resource@@@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??B?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1GE@JAALOPNF@?$AA?$CB?$AA?$CC?$AAR?$AAe?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AAs?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AAs?$AA?5?$AAo?$AAr?$AA?5?$AAh@
CONST	SEGMENT
??_C@_1GE@JAALOPNF@?$AA?$CB?$AA?$CC?$AAR?$AAe?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AAs?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AAs?$AA?5?$AAo?$AAr?$AA?5?$AAh@ DB '!'
	DB	00H, '"', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H
	DB	'r', 00H, 'c', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'b', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 's'
	DB	00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'h', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a'
	DB	00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, '"', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@IIOIKGLG@Resources?5are?5not?5buffers?5or?5hav@
CONST	SEGMENT
??_C@_0CP@IIOIKGLG@Resources?5are?5not?5buffers?5or?5hav@ DB 'Resources a'
	DB	're not buffers or have invalid size', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z@4JA DD 05cH ; `FatDXFramework::CopyDataToBuffer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1FG@FMPOCDJG@?$AA?$CB?$AA?$CC?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAu?$AAp?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr@
CONST	SEGMENT
??_C@_1FG@FMPOCDJG@?$AA?$CB?$AA?$CC?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAu?$AAp?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr@ DB '!'
	DB	00H, '"', 00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'c', 00H, 'r'
	DB	00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'u', 00H
	DB	'p', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, ' ', 00H, 'b'
	DB	00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'r', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c'
	DB	00H, 'e', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@JEEPPCIG@Failed?5to?5create?5upload?5buffer?5r@
CONST	SEGMENT
??_C@_0CI@JEEPPCIG@Failed?5to?5create?5upload?5buffer?5r@ DB 'Failed to c'
	DB	'reate upload buffer resource', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4JA DD 026H ; `FatDXFramework::CreateUploadBuffer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1FA@MEFELNMF@?$AA?$CB?$AA?$CC?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAG?$AAP?$AAU?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAr?$AAe@
CONST	SEGMENT
??_C@_1FA@MEFELNMF@?$AA?$CB?$AA?$CC?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAG?$AAP?$AAU?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAr?$AAe@ DB '!'
	DB	00H, '"', 00H, 'F', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'c', 00H, 'r'
	DB	00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'G', 00H
	DB	'P', 00H, 'U', 00H, ' ', 00H, 'b', 00H, 'u', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 's', 00H
	DB	'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@NMLGCBAA@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAh?$AAa?$AAe?$AAs?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2@
CONST	SEGMENT
??_C@_1LK@NMLGCBAA@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAh?$AAa?$AAe?$AAs?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'k', 00H, 'h', 00H, 'a', 00H, 'e', 00H, 's'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'u', 00H, 'm', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'g', 00H, 'i'
	DB	00H, 't', 00H, 'h', 00H, 'u', 00H, 'b', 00H, '\', 00H, 'p', 00H
	DB	'a', 00H, 't', 00H, 'h', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, '_', 00H, 'l', 00H, 'i', 00H
	DB	'g', 00H, 'h', 00H, 't', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '\'
	DB	00H, 'f', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'g', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, '\', 00H, 'f', 00H, 'a', 00H, 't'
	DB	00H, 'd', 00H, 'x', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'o', 00H
	DB	'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'm', 00H, 'a', 00H, 'n'
	DB	00H, 'i', 00H, 'p', 00H, 'u', 00H, 'l', 00H, 'a', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@EDPCMKEP@Failed?5to?5create?5GPU?5buffer?5reso@
CONST	SEGMENT
??_C@_0CF@EDPCMKEP@Failed?5to?5create?5GPU?5buffer?5reso@ DB 'Failed to c'
	DB	'reate GPU buffer resource', 00H		; `string'
CONST	ENDS
;	COMDAT _GUID_696442be_a72e_4059_bc79_5b5c98040fad
CONST	SEGMENT
_GUID_696442be_a72e_4059_bc79_5b5c98040fad DD 0696442beH
	DW	0a72eH
	DW	04059H
	DB	0bcH
	DB	079H
	DB	05bH
	DB	05cH
	DB	098H
	DB	04H
	DB	0fH
	DB	0adH
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4JA DD 04H ; `FatDXFramework::CreateGpuBuffer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Resource@@@23@@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ResourceStateTransition@FatDXFramework@@AEAAXAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@W4D3D12_RESOURCE_STATES@@1@Z DD 025054a19H
	DD	011d2322H
	DD	070160027H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0120H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?ResourceStateTransition@FatDXFramework@@AEAAXAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@W4D3D12_RESOURCE_STATES@@1@Z$rtcName$0 DB 063H ; FatDXFramework::ResourceStateTransition
	DB	06fH
	DB	070H
	DB	079H
	DB	042H
	DB	061H
	DB	072H
	DB	072H
	DB	069H
	DB	065H
	DB	072H
	DB	00H
	ORG $+4
?ResourceStateTransition@FatDXFramework@@AEAAXAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@W4D3D12_RESOURCE_STATES@@1@Z$rtcVarDesc DD 028H ; FatDXFramework::ResourceStateTransition
	DD	020H
	DQ	FLAT:?ResourceStateTransition@FatDXFramework@@AEAAXAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@W4D3D12_RESOURCE_STATES@@1@Z$rtcName$0
	ORG $+48
?ResourceStateTransition@FatDXFramework@@AEAAXAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@W4D3D12_RESOURCE_STATES@@1@Z$rtcFrameData DD 01H ; FatDXFramework::ResourceStateTransition
	DD	00H
	DQ	FLAT:?ResourceStateTransition@FatDXFramework@@AEAAXAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@W4D3D12_RESOURCE_STATES@@1@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z DD 025054a19H
	DD	011d2322H
	DD	07016003dH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	01d0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z$rtcName$0 DB 075H ; FatDXFramework::CopyDataToBuffer
	DB	070H
	DB	06cH
	DB	06fH
	DB	061H
	DB	064H
	DB	044H
	DB	065H
	DB	073H
	DB	063H
	DB	00H
	ORG $+5
?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z$rtcName$1 DB 064H ; FatDXFramework::CopyDataToBuffer
	DB	065H
	DB	073H
	DB	074H
	DB	069H
	DB	06eH
	DB	061H
	DB	074H
	DB	069H
	DB	06fH
	DB	06eH
	DB	044H
	DB	065H
	DB	073H
	DB	063H
	DB	00H
?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z$rtcName$2 DB 070H ; FatDXFramework::CopyDataToBuffer
	DB	044H
	DB	061H
	DB	074H
	DB	061H
	DB	055H
	DB	070H
	DB	06cH
	DB	06fH
	DB	061H
	DB	064H
	DB	00H
	ORG $+4
?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z$rtcVarDesc DD 0c8H ; FatDXFramework::CopyDataToBuffer
	DD	08H
	DQ	FLAT:?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z$rtcName$2
	DD	078H
	DD	038H
	DQ	FLAT:?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z$rtcName$1
	DD	028H
	DD	038H
	DQ	FLAT:?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z$rtcName$0
	ORG $+144
?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z$rtcFrameData DD 03H ; FatDXFramework::CopyDataToBuffer
	DD	00H
	DQ	FLAT:?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z DD imagerel ?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z
	DD	0ffffffffH
	DD	imagerel ?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z+133
	DD	00H
	DD	imagerel ?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z+323
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z DD 035055519H
	DD	011d3322H
	DD	070160031H
	DD	05015H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z
	DD	0172H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z$rtcName$0 DB 067H ; FatDXFramework::LoadDataToGpu
	DB	070H
	DB	075H
	DB	042H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+6
?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z$rtcVarDesc DD 038H ; FatDXFramework::LoadDataToGpu
	DD	08H
	DQ	FLAT:?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z$rtcName$0
	ORG $+48
?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z$rtcFrameData DD 01H ; FatDXFramework::LoadDataToGpu
	DD	00H
	DQ	FLAT:?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z$rtcVarDesc
$cppxdata$?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z
	DD	0158H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z DD imagerel ?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z
	DD	0ffffffffH
	DD	imagerel ?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z+116
	DD	00H
	DD	imagerel ?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z+473
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z DD 045055019H
	DD	0118431dH
	DD	070110047H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z
	DD	022aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcName$0 DB 075H ; FatDXFramework::CreateUploadBuffer
	DB	070H
	DB	06cH
	DB	06fH
	DB	061H
	DB	064H
	DB	042H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+3
?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcName$1 DB 075H ; FatDXFramework::CreateUploadBuffer
	DB	070H
	DB	06cH
	DB	06fH
	DB	061H
	DB	064H
	DB	048H
	DB	065H
	DB	061H
	DB	070H
	DB	050H
	DB	072H
	DB	06fH
	DB	070H
	DB	065H
	DB	072H
	DB	074H
	DB	069H
	DB	065H
	DB	073H
	DB	00H
	ORG $+3
?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcName$2 DB 075H ; FatDXFramework::CreateUploadBuffer
	DB	070H
	DB	06cH
	DB	06fH
	DB	061H
	DB	064H
	DB	052H
	DB	065H
	DB	073H
	DB	06fH
	DB	075H
	DB	072H
	DB	063H
	DB	065H
	DB	044H
	DB	065H
	DB	073H
	DB	063H
	DB	072H
	DB	069H
	DB	070H
	DB	074H
	DB	069H
	DB	06fH
	DB	06eH
	DB	00H
	ORG $+14
?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcVarDesc DD 098H ; FatDXFramework::CreateUploadBuffer
	DD	038H
	DQ	FLAT:?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcName$2
	DD	068H
	DD	014H
	DQ	FLAT:?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcName$1
	DD	048H
	DD	08H
	DQ	FLAT:?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcName$0
	ORG $+144
?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcFrameData DD 03H ; FatDXFramework::CreateUploadBuffer
	DD	00H
	DQ	FLAT:?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcVarDesc
$cppxdata$?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z
	DD	0208H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z DD imagerel ?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z
	DD	0ffffffffH
	DD	imagerel ?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z+116
	DD	00H
	DD	imagerel ?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z+473
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z DD 045055019H
	DD	0118431dH
	DD	070110047H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z
	DD	022aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcName$0 DB 067H ; FatDXFramework::CreateGpuBuffer
	DB	070H
	DB	075H
	DB	042H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+6
?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcName$1 DB 064H ; FatDXFramework::CreateGpuBuffer
	DB	065H
	DB	066H
	DB	048H
	DB	065H
	DB	061H
	DB	070H
	DB	050H
	DB	072H
	DB	06fH
	DB	070H
	DB	065H
	DB	072H
	DB	074H
	DB	069H
	DB	065H
	DB	073H
	DB	00H
	ORG $+6
?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcName$2 DB 064H ; FatDXFramework::CreateGpuBuffer
	DB	065H
	DB	066H
	DB	052H
	DB	065H
	DB	073H
	DB	06fH
	DB	075H
	DB	072H
	DB	063H
	DB	065H
	DB	044H
	DB	065H
	DB	073H
	DB	063H
	DB	072H
	DB	069H
	DB	070H
	DB	074H
	DB	069H
	DB	06fH
	DB	06eH
	DB	00H
	ORG $+1
?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcVarDesc DD 098H ; FatDXFramework::CreateGpuBuffer
	DD	038H
	DQ	FLAT:?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcName$2
	DD	068H
	DD	014H
	DQ	FLAT:?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcName$1
	DD	048H
	DD	08H
	DQ	FLAT:?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcName$0
	ORG $+144
?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcFrameData DD 03H ; FatDXFramework::CreateGpuBuffer
	DD	00H
	DQ	FLAT:?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcVarDesc
$cppxdata$?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z
	DD	0208H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Resource@@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Resource@@@Details@12@XZ DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Swap@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAXAEAV123@@Z DD 05052d01H
	DD	01130316H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAAEAV012@$$QEAV012@@Z DD 025052f01H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$QEAV012@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$T@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$ComPtr@UID3D12GraphicsCommandList@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12GraphicsCommandList@@@Details@12@XZ DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$ComPtr@UID3D12Device@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Device@@@Details@12@XZ DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
_TEXT	SEGMENT
pp$ = 224
??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z PROC ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Resource> >, COMDAT

; 876  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 877  :     static_assert(__is_base_of(IUnknown, T::InterfaceType), "T has to derive from IUnknown");
; 878  :     return pp;

  0002a	48 8d 8d e0 00
	00 00		 lea	 rcx, QWORD PTR pp$[rbp]
  00031	e8 00 00 00 00	 call	 ??B?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >::operator void * __ptr64 * __ptr64

; 879  : }

  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ENDP ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Resource> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ
_TEXT	SEGMENT
this$ = 224
??B?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >::operator void * __ptr64 * __ptr64, COMDAT

; 119  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 120  :         return reinterpret_cast<void**>(ptr_->ReleaseAndGetAddressOf());

  0002a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00034	e8 00 00 00 00	 call	 ?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::ReleaseAndGetAddressOf

; 121  :     }

  00039	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00040	5f		 pop	 rdi
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??B?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEBAPEAPEAXXZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >::operator void * __ptr64 * __ptr64
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Resource@@@23@@Z
_TEXT	SEGMENT
this$ = 224
ptr$ = 232
??0?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Resource@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >, COMDAT

; 112  :     ComPtrRef(_In_opt_ T* ptr) throw()

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]

; 113  :     {
; 114  :          ComPtrRefBase<T>::ptr_ = ptr;

  0002d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR ptr$[rbp]
  0003b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 115  :     }

  0003e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00045	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004c	5f		 pop	 rdi
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
??0?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Resource@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\khaes\documents\github\pathtracing_lightmap\fatengine\fatdxresourcemanipulation.cpp
;	COMDAT ?ResourceStateTransition@FatDXFramework@@AEAAXAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@W4D3D12_RESOURCE_STATES@@1@Z
_TEXT	SEGMENT
copyBarrier$ = 8
tv78 = 248
__$ArrayPad$ = 256
this$ = 304
resource$ = 312
prev_state$ = 320
next_state$ = 328
?ResourceStateTransition@FatDXFramework@@AEAAXAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@W4D3D12_RESOURCE_STATES@@1@Z PROC ; FatDXFramework::ResourceStateTransition, COMDAT

; 119  :                                                D3D12_RESOURCE_STATES            next_state ) {

$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR [rsp+344]
  00039	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00040	48 33 c5	 xor	 rax, rbp
  00043	48 89 85 00 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax

; 120  :     D3D12_RESOURCE_BARRIER                           copyBarrier = {};

  0004a	48 8d 45 08	 lea	 rax, QWORD PTR copyBarrier$[rbp]
  0004e	48 8b f8	 mov	 rdi, rax
  00051	33 c0		 xor	 eax, eax
  00053	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00058	f3 aa		 rep stosb

; 121  :     copyBarrier.Type                                 = D3D12_RESOURCE_BARRIER_TYPE_TRANSITION;

  0005a	c7 45 08 00 00
	00 00		 mov	 DWORD PTR copyBarrier$[rbp], 0

; 122  :     copyBarrier.Flags                                = D3D12_RESOURCE_BARRIER_FLAG_NONE;

  00061	c7 45 0c 00 00
	00 00		 mov	 DWORD PTR copyBarrier$[rbp+4], 0

; 123  :     copyBarrier.Transition.pResource                 = resource.Get ();

  00068	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR resource$[rbp]
  0006f	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::Get
  00074	48 89 45 10	 mov	 QWORD PTR copyBarrier$[rbp+8], rax

; 124  :     copyBarrier.Transition.StateBefore               = prev_state;

  00078	8b 85 40 01 00
	00		 mov	 eax, DWORD PTR prev_state$[rbp]
  0007e	89 45 1c	 mov	 DWORD PTR copyBarrier$[rbp+20], eax

; 125  :     copyBarrier.Transition.StateAfter                = next_state;

  00081	8b 85 48 01 00
	00		 mov	 eax, DWORD PTR next_state$[rbp]
  00087	89 45 20	 mov	 DWORD PTR copyBarrier$[rbp+24], eax

; 126  :     copyBarrier.Transition.Subresource               = D3D12_RESOURCE_BARRIER_ALL_SUBRESOURCES;

  0008a	c7 45 18 ff ff
	ff ff		 mov	 DWORD PTR copyBarrier$[rbp+16], -1 ; ffffffffH

; 127  : 
; 128  :     m_CommandList_->ResourceBarrier ( 1, &copyBarrier );

  00091	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00098	48 83 c0 70	 add	 rax, 112		; 00000070H
  0009c	48 8b c8	 mov	 rcx, rax
  0009f	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12GraphicsCommandList@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList>::operator->
  000a4	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  000ab	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR tv78[rbp]
  000b2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000b5	4c 8d 45 08	 lea	 r8, QWORD PTR copyBarrier$[rbp]
  000b9	ba 01 00 00 00	 mov	 edx, 1
  000be	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  000c5	ff 90 d0 00 00
	00		 call	 QWORD PTR [rax+208]

; 129  : }

  000cb	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000cf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ResourceStateTransition@FatDXFramework@@AEAAXAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@W4D3D12_RESOURCE_STATES@@1@Z$rtcFrameData
  000d6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000db	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000e2	48 33 cd	 xor	 rcx, rbp
  000e5	e8 00 00 00 00	 call	 __security_check_cookie
  000ea	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  000f1	5f		 pop	 rdi
  000f2	5d		 pop	 rbp
  000f3	c3		 ret	 0
?ResourceStateTransition@FatDXFramework@@AEAAXAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@W4D3D12_RESOURCE_STATES@@1@Z ENDP ; FatDXFramework::ResourceStateTransition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\khaes\documents\github\pathtracing_lightmap\fatengine\fatdxresourcemanipulation.cpp
;	COMDAT ?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z
_TEXT	SEGMENT
uploadDesc$ = 8
destinationDesc$ = 88
pDataUpload$ = 168
res$ = 196
tv165 = 408
tv152 = 408
tv134 = 408
tv82 = 408
tv71 = 408
tv169 = 416
tv175 = 424
__$ArrayPad$ = 432
this$ = 480
destination$ = 488
upload$ = 496
pDataSource$ = 504
dataSize$ = 512
?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z PROC ; FatDXFramework::CopyDataToBuffer, COMDAT

; 92   :                                         const UINT64 &                  dataSize )  const {

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec e8 01
	00 00		 sub	 rsp, 488		; 000001e8H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 7a 00 00 00	 mov	 ecx, 122		; 0000007aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 08
	02 00 00	 mov	 rcx, QWORD PTR [rsp+520]
  00039	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00040	48 33 c5	 xor	 rax, rbp
  00043	48 89 85 b0 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax

; 93   :     D3D12_RESOURCE_DESC uploadDesc          = upload->GetDesc();

  0004a	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR upload$[rbp]
  00051	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Resource@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator->
  00056	48 89 85 98 01
	00 00		 mov	 QWORD PTR tv71[rbp], rax
  0005d	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR tv71[rbp]
  00064	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00067	48 8d 55 08	 lea	 rdx, QWORD PTR uploadDesc$[rbp]
  0006b	48 8b 8d 98 01
	00 00		 mov	 rcx, QWORD PTR tv71[rbp]
  00072	ff 50 50	 call	 QWORD PTR [rax+80]

; 94   :     D3D12_RESOURCE_DESC destinationDesc     = destination->GetDesc();

  00075	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR destination$[rbp]
  0007c	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Resource@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator->
  00081	48 89 85 98 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  00088	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR tv82[rbp]
  0008f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00092	48 8d 55 58	 lea	 rdx, QWORD PTR destinationDesc$[rbp]
  00096	48 8b 8d 98 01
	00 00		 mov	 rcx, QWORD PTR tv82[rbp]
  0009d	ff 50 50	 call	 QWORD PTR [rax+80]

; 95   :     if ( uploadDesc.Dimension != D3D12_RESOURCE_DIMENSION_BUFFER ||
; 96   :          destinationDesc.Dimension != D3D12_RESOURCE_DIMENSION_BUFFER ||

  000a0	83 7d 08 01	 cmp	 DWORD PTR uploadDesc$[rbp], 1
  000a4	75 16		 jne	 SHORT $LN3@CopyDataTo
  000a6	83 7d 58 01	 cmp	 DWORD PTR destinationDesc$[rbp], 1
  000aa	75 10		 jne	 SHORT $LN3@CopyDataTo
  000ac	48 8b 85 00 02
	00 00		 mov	 rax, QWORD PTR dataSize$[rbp]
  000b3	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000b6	48 39 45 18	 cmp	 QWORD PTR uploadDesc$[rbp+16], rax
  000ba	73 35		 jae	 SHORT $LN2@CopyDataTo
$LN3@CopyDataTo:

; 97   :          uploadDesc.Width           <  dataSize ) {
; 98   :         assert ( !"Resources are not buffers or have invalid size" );

  000bc	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CP@IIOIKGLG@Resources?5are?5not?5buffers?5or?5hav@
  000c3	48 85 c0	 test	 rax, rax
  000c6	74 22		 je	 SHORT $LN6@CopyDataTo
  000c8	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z@4JA
  000ce	83 c0 06	 add	 eax, 6
  000d1	44 8b c0	 mov	 r8d, eax
  000d4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LK@NMLGCBAA@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAh?$AAa?$AAe?$AAs?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2@
  000db	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GE@JAALOPNF@?$AA?$CB?$AA?$CC?$AAR?$AAe?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AAs?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AAs?$AA?5?$AAo?$AAr?$AA?5?$AAh@
  000e2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000e8	33 c0		 xor	 eax, eax
$LN6@CopyDataTo:

; 99   :         return false;

  000ea	32 c0		 xor	 al, al
  000ec	e9 ff 00 00 00	 jmp	 $LN1@CopyDataTo
$LN2@CopyDataTo:

; 100  :     }
; 101  : 
; 102  :     BYTE* pDataUpload;
; 103  :     HRESULT res = upload->Map( 0, nullptr, reinterpret_cast<void**> (&pDataUpload) );

  000f1	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR upload$[rbp]
  000f8	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Resource@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator->
  000fd	48 89 85 98 01
	00 00		 mov	 QWORD PTR tv134[rbp], rax
  00104	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR tv134[rbp]
  0010b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0010e	4c 8d 8d a8 00
	00 00		 lea	 r9, QWORD PTR pDataUpload$[rbp]
  00115	45 33 c0	 xor	 r8d, r8d
  00118	33 d2		 xor	 edx, edx
  0011a	48 8b 8d 98 01
	00 00		 mov	 rcx, QWORD PTR tv134[rbp]
  00121	ff 50 40	 call	 QWORD PTR [rax+64]
  00124	89 85 c4 00 00
	00		 mov	 DWORD PTR res$[rbp], eax

; 104  :     if ( FAILED( res ) ) {

  0012a	83 bd c4 00 00
	00 00		 cmp	 DWORD PTR res$[rbp], 0
  00131	7d 07		 jge	 SHORT $LN4@CopyDataTo

; 105  :         return false;

  00133	32 c0		 xor	 al, al
  00135	e9 b6 00 00 00	 jmp	 $LN1@CopyDataTo
$LN4@CopyDataTo:

; 106  :     }
; 107  :     memcpy( pDataUpload, pDataSource, dataSize );

  0013a	48 8b 85 00 02
	00 00		 mov	 rax, QWORD PTR dataSize$[rbp]
  00141	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00144	48 8b 95 f8 01
	00 00		 mov	 rdx, QWORD PTR pDataSource$[rbp]
  0014b	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR pDataUpload$[rbp]
  00152	e8 00 00 00 00	 call	 memcpy

; 108  :     upload->Unmap ( 0, nullptr );

  00157	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR upload$[rbp]
  0015e	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Resource@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator->
  00163	48 89 85 98 01
	00 00		 mov	 QWORD PTR tv152[rbp], rax
  0016a	48 8b 85 98 01
	00 00		 mov	 rax, QWORD PTR tv152[rbp]
  00171	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00174	45 33 c0	 xor	 r8d, r8d
  00177	33 d2		 xor	 edx, edx
  00179	48 8b 8d 98 01
	00 00		 mov	 rcx, QWORD PTR tv152[rbp]
  00180	ff 50 48	 call	 QWORD PTR [rax+72]

; 109  : 
; 110  :     m_CommandList_->CopyResource( destination.Get(), upload.Get() );

  00183	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0018a	48 83 c0 70	 add	 rax, 112		; 00000070H
  0018e	48 8b c8	 mov	 rcx, rax
  00191	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12GraphicsCommandList@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12GraphicsCommandList@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList>::operator->
  00196	48 89 85 98 01
	00 00		 mov	 QWORD PTR tv165[rbp], rax
  0019d	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR upload$[rbp]
  001a4	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::Get
  001a9	48 89 85 a0 01
	00 00		 mov	 QWORD PTR tv169[rbp], rax
  001b0	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR destination$[rbp]
  001b7	e8 00 00 00 00	 call	 ?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::Get
  001bc	48 8b 8d 98 01
	00 00		 mov	 rcx, QWORD PTR tv165[rbp]
  001c3	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  001c6	48 89 8d a8 01
	00 00		 mov	 QWORD PTR tv175[rbp], rcx
  001cd	48 8b 95 a0 01
	00 00		 mov	 rdx, QWORD PTR tv169[rbp]
  001d4	4c 8b c2	 mov	 r8, rdx
  001d7	48 8b d0	 mov	 rdx, rax
  001da	48 8b 8d 98 01
	00 00		 mov	 rcx, QWORD PTR tv165[rbp]
  001e1	48 8b 85 a8 01
	00 00		 mov	 rax, QWORD PTR tv175[rbp]
  001e8	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]

; 111  : 
; 112  :     return true;

  001ee	b0 01		 mov	 al, 1
$LN1@CopyDataTo:

; 113  : }

  001f0	48 8b f8	 mov	 rdi, rax
  001f3	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  001f7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z$rtcFrameData
  001fe	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00203	48 8b c7	 mov	 rax, rdi
  00206	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  0020d	48 33 cd	 xor	 rcx, rbp
  00210	e8 00 00 00 00	 call	 __security_check_cookie
  00215	48 8d a5 c8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+456]
  0021c	5f		 pop	 rdi
  0021d	5d		 pop	 rbp
  0021e	c3		 ret	 0
?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z ENDP ; FatDXFramework::CopyDataToBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\khaes\documents\github\pathtracing_lightmap\fatengine\fatdxresourcemanipulation.cpp
;	COMDAT ?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z
_TEXT	SEGMENT
gpuBuffer$ = 8
$T4 = 232
$T5 = 260
$T6 = 296
tv130 = 312
__$ArrayPad$ = 320
this$ = 368
__$ReturnUdt$ = 376
pVertexData$ = 384
dataSize$ = 392
uploadBuffer$ = 400
?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z PROC ; FatDXFramework::LoadDataToGpu, COMDAT

; 75   :                                                        ComPtr<ID3D12Resource>& uploadBuffer ) {

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  0001d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+424]
  00039	48 c7 85 28 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T6[rbp], -2
  00044	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0004b	48 33 c5	 xor	 rax, rbp
  0004e	48 89 85 40 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00055	c7 85 04 01 00
	00 00 00 00 00	 mov	 DWORD PTR $T5[rbp], 0

; 76   :     // Important to keep pointer to uploadBuffer after the function returns
; 77   :     // untill GPU stops executing after m_CommandQueue_->ExecuteCommandLists call
; 78   :     ComPtr<ID3D12Resource> gpuBuffer = CreateGpuBuffer ( dataSize );

  0005f	ba 08 00 00 00	 mov	 edx, 8
  00064	48 8d 4d 08	 lea	 rcx, QWORD PTR gpuBuffer$[rbp]
  00068	e8 00 00 00 00	 call	 ?__autoclassinit2@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAX_K@Z
  0006d	4c 8b 85 88 01
	00 00		 mov	 r8, QWORD PTR dataSize$[rbp]
  00074	48 8d 55 08	 lea	 rdx, QWORD PTR gpuBuffer$[rbp]
  00078	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0007f	e8 00 00 00 00	 call	 ?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z ; FatDXFramework::CreateGpuBuffer
  00084	90		 npad	 1

; 79   :     uploadBuffer = CreateUploadBuffer ( dataSize );

  00085	4c 8b 85 88 01
	00 00		 mov	 r8, QWORD PTR dataSize$[rbp]
  0008c	48 8d 95 e8 00
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  00093	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0009a	e8 00 00 00 00	 call	 ?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z ; FatDXFramework::CreateUploadBuffer
  0009f	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv130[rbp], rax
  000a6	48 8b 95 38 01
	00 00		 mov	 rdx, QWORD PTR tv130[rbp]
  000ad	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR uploadBuffer$[rbp]
  000b4	e8 00 00 00 00	 call	 ??4?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAAEAV012@$$QEAV012@@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator=
  000b9	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  000c0	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>

; 80   :     ResourceStateTransition ( gpuBuffer, D3D12_RESOURCE_STATE_COMMON, D3D12_RESOURCE_STATE_COPY_DEST );

  000c5	41 b9 00 04 00
	00		 mov	 r9d, 1024		; 00000400H
  000cb	45 33 c0	 xor	 r8d, r8d
  000ce	48 8d 55 08	 lea	 rdx, QWORD PTR gpuBuffer$[rbp]
  000d2	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000d9	e8 00 00 00 00	 call	 ?ResourceStateTransition@FatDXFramework@@AEAAXAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@W4D3D12_RESOURCE_STATES@@1@Z ; FatDXFramework::ResourceStateTransition

; 81   :     CopyDataToBuffer ( gpuBuffer, uploadBuffer, pVertexData, dataSize );

  000de	48 8b 85 88 01
	00 00		 mov	 rax, QWORD PTR dataSize$[rbp]
  000e5	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ea	4c 8b 8d 80 01
	00 00		 mov	 r9, QWORD PTR pVertexData$[rbp]
  000f1	4c 8b 85 90 01
	00 00		 mov	 r8, QWORD PTR uploadBuffer$[rbp]
  000f8	48 8d 55 08	 lea	 rdx, QWORD PTR gpuBuffer$[rbp]
  000fc	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00103	e8 00 00 00 00	 call	 ?CopyDataToBuffer@FatDXFramework@@AEBA_NAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@0PEBXAEB_K@Z ; FatDXFramework::CopyDataToBuffer

; 82   :     ResourceStateTransition ( gpuBuffer, D3D12_RESOURCE_STATE_COPY_DEST, D3D12_RESOURCE_STATE_GENERIC_READ );

  00108	41 b9 c3 0a 00
	00		 mov	 r9d, 2755		; 00000ac3H
  0010e	41 b8 00 04 00
	00		 mov	 r8d, 1024		; 00000400H
  00114	48 8d 55 08	 lea	 rdx, QWORD PTR gpuBuffer$[rbp]
  00118	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0011f	e8 00 00 00 00	 call	 ?ResourceStateTransition@FatDXFramework@@AEAAXAEBV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@W4D3D12_RESOURCE_STATES@@1@Z ; FatDXFramework::ResourceStateTransition

; 83   : 
; 84   :     return gpuBuffer;

  00124	48 8d 55 08	 lea	 rdx, QWORD PTR gpuBuffer$[rbp]
  00128	48 8b 8d 78 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0012f	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$QEAV012@@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
  00134	8b 85 04 01 00
	00		 mov	 eax, DWORD PTR $T5[rbp]
  0013a	83 c8 01	 or	 eax, 1
  0013d	89 85 04 01 00
	00		 mov	 DWORD PTR $T5[rbp], eax
  00143	48 8d 4d 08	 lea	 rcx, QWORD PTR gpuBuffer$[rbp]
  00147	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
  0014c	48 8b 85 78 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 85   : }

  00153	48 8b f8	 mov	 rdi, rax
  00156	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  0015a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z$rtcFrameData
  00161	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00166	48 8b c7	 mov	 rax, rdi
  00169	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00170	48 33 cd	 xor	 rcx, rbp
  00173	e8 00 00 00 00	 call	 __security_check_cookie
  00178	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  0017f	5f		 pop	 rdi
  00180	5d		 pop	 rbp
  00181	c3		 ret	 0
?LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z ENDP ; FatDXFramework::LoadDataToGpu
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
gpuBuffer$ = 8
$T4 = 232
$T5 = 260
$T6 = 296
tv130 = 312
__$ArrayPad$ = 320
this$ = 368
__$ReturnUdt$ = 376
pVertexData$ = 384
dataSize$ = 392
uploadBuffer$ = 400
?dtor$0@?0??LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z@4HA PROC ; `FatDXFramework::LoadDataToGpu'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR gpuBuffer$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z@4HA ENDP ; `FatDXFramework::LoadDataToGpu'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
gpuBuffer$ = 8
$T4 = 232
$T5 = 260
$T6 = 296
tv130 = 312
__$ArrayPad$ = 320
this$ = 368
__$ReturnUdt$ = 376
pVertexData$ = 384
dataSize$ = 392
uploadBuffer$ = 400
?dtor$0@?0??LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z@4HA PROC ; `FatDXFramework::LoadDataToGpu'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR gpuBuffer$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??LoadDataToGpu@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@PEBXAEB_KAEAV234@@Z@4HA ENDP ; `FatDXFramework::LoadDataToGpu'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\khaes\documents\github\pathtracing_lightmap\fatengine\fatdxresourcemanipulation.cpp
;	COMDAT ?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z
_TEXT	SEGMENT
uploadBuffer$ = 8
uploadHeapProperties$ = 40
uploadResourceDescription$ = 88
res$ = 164
$T6 = 392
$T7 = 420
$T8 = 456
tv78 = 472
tv166 = 480
__$ArrayPad$ = 488
this$ = 528
__$ReturnUdt$ = 536
bufferSize$ = 544
?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z PROC ; FatDXFramework::CreateUploadBuffer, COMDAT

; 38   : ComPtr<ID3D12Resource> FatDXFramework::CreateUploadBuffer ( const UINT64 &  bufferSize ) {

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 38 02
	00 00		 sub	 rsp, 568		; 00000238H
  00018	48 8d 6c 24 40	 lea	 rbp, QWORD PTR [rsp+64]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 8e 00 00 00	 mov	 ecx, 142		; 0000008eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 58
	02 00 00	 mov	 rcx, QWORD PTR [rsp+600]
  00034	48 c7 85 c8 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T8[rbp], -2
  0003f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00046	48 33 c5	 xor	 rax, rbp
  00049	48 89 85 e8 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00050	c7 85 a4 01 00
	00 00 00 00 00	 mov	 DWORD PTR $T7[rbp], 0

; 39   :     // This buffer represents CPU memory which is mediator for uploading data into GPU memory or
; 40   :     // used to store dynamic data
; 41   :     ComPtr<ID3D12Resource>                            uploadBuffer = nullptr;

  0005a	ba 08 00 00 00	 mov	 edx, 8
  0005f	48 8d 4d 08	 lea	 rcx, QWORD PTR uploadBuffer$[rbp]
  00063	e8 00 00 00 00	 call	 ?__autoclassinit2@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAX_K@Z
  00068	33 d2		 xor	 edx, edx
  0006a	48 8d 4d 08	 lea	 rcx, QWORD PTR uploadBuffer$[rbp]
  0006e	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$T@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
  00073	90		 npad	 1

; 42   :     D3D12_HEAP_PROPERTIES                             uploadHeapProperties;
; 43   :     uploadHeapProperties.Type                         = D3D12_HEAP_TYPE_UPLOAD;

  00074	c7 45 28 02 00
	00 00		 mov	 DWORD PTR uploadHeapProperties$[rbp], 2

; 44   :     uploadHeapProperties.CPUPageProperty              = D3D12_CPU_PAGE_PROPERTY_UNKNOWN;

  0007b	c7 45 2c 00 00
	00 00		 mov	 DWORD PTR uploadHeapProperties$[rbp+4], 0

; 45   :     uploadHeapProperties.MemoryPoolPreference         = D3D12_MEMORY_POOL_UNKNOWN;

  00082	c7 45 30 00 00
	00 00		 mov	 DWORD PTR uploadHeapProperties$[rbp+8], 0

; 46   :     uploadHeapProperties.CreationNodeMask             = 1;

  00089	c7 45 34 01 00
	00 00		 mov	 DWORD PTR uploadHeapProperties$[rbp+12], 1

; 47   :     uploadHeapProperties.VisibleNodeMask              = 1;

  00090	c7 45 38 01 00
	00 00		 mov	 DWORD PTR uploadHeapProperties$[rbp+16], 1

; 48   : 
; 49   :     D3D12_RESOURCE_DESC                               uploadResourceDescription;
; 50   :     uploadResourceDescription.Dimension               = D3D12_RESOURCE_DIMENSION_BUFFER;

  00097	c7 45 58 01 00
	00 00		 mov	 DWORD PTR uploadResourceDescription$[rbp], 1

; 51   :     uploadResourceDescription.Format                  = DXGI_FORMAT_UNKNOWN;

  0009e	c7 45 78 00 00
	00 00		 mov	 DWORD PTR uploadResourceDescription$[rbp+32], 0

; 52   :     uploadResourceDescription.Width                   = bufferSize;

  000a5	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR bufferSize$[rbp]
  000ac	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000af	48 89 45 68	 mov	 QWORD PTR uploadResourceDescription$[rbp+16], rax

; 53   :     uploadResourceDescription.SampleDesc.Count        = 1;

  000b3	c7 45 7c 01 00
	00 00		 mov	 DWORD PTR uploadResourceDescription$[rbp+36], 1

; 54   :     uploadResourceDescription.SampleDesc.Quality      = 0;

  000ba	c7 85 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR uploadResourceDescription$[rbp+40], 0

; 55   :     uploadResourceDescription.Alignment               = D3D12_DEFAULT_RESOURCE_PLACEMENT_ALIGNMENT;

  000c4	48 c7 45 60 00
	00 01 00	 mov	 QWORD PTR uploadResourceDescription$[rbp+8], 65536 ; 00010000H

; 56   :     uploadResourceDescription.DepthOrArraySize        = 1;

  000cc	b8 01 00 00 00	 mov	 eax, 1
  000d1	66 89 45 74	 mov	 WORD PTR uploadResourceDescription$[rbp+28], ax

; 57   :     uploadResourceDescription.Height                  = 1;

  000d5	c7 45 70 01 00
	00 00		 mov	 DWORD PTR uploadResourceDescription$[rbp+24], 1

; 58   :     uploadResourceDescription.MipLevels               = 1;

  000dc	b8 01 00 00 00	 mov	 eax, 1
  000e1	66 89 45 76	 mov	 WORD PTR uploadResourceDescription$[rbp+30], ax

; 59   :     uploadResourceDescription.Flags                   = D3D12_RESOURCE_FLAG_NONE;

  000e5	c7 85 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR uploadResourceDescription$[rbp+48], 0

; 60   :     uploadResourceDescription.Layout                  = D3D12_TEXTURE_LAYOUT_ROW_MAJOR;

  000ef	c7 85 84 00 00
	00 01 00 00 00	 mov	 DWORD PTR uploadResourceDescription$[rbp+44], 1

; 61   : 
; 62   :     HRESULT res  = m_Device_->CreateCommittedResource ( &uploadHeapProperties, D3D12_HEAP_FLAG_NONE,

  000f9	48 8b 85 10 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00100	48 83 c0 20	 add	 rax, 32			; 00000020H
  00104	48 8b c8	 mov	 rcx, rax
  00107	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Device@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Device>::operator->
  0010c	48 89 85 d8 01
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  00113	48 8d 95 88 01
	00 00		 lea	 rdx, QWORD PTR $T6[rbp]
  0011a	48 8d 4d 08	 lea	 rcx, QWORD PTR uploadBuffer$[rbp]
  0011e	e8 00 00 00 00	 call	 ??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator&
  00123	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00126	e8 00 00 00 00	 call	 ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Resource> >
  0012b	48 8b 8d d8 01
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  00132	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00135	48 89 8d e0 01
	00 00		 mov	 QWORD PTR tv166[rbp], rcx
  0013c	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00141	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_GUID_696442be_a72e_4059_bc79_5b5c98040fad
  00148	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0014d	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  00156	c7 44 24 20 c3
	0a 00 00	 mov	 DWORD PTR [rsp+32], 2755 ; 00000ac3H
  0015e	4c 8d 4d 58	 lea	 r9, QWORD PTR uploadResourceDescription$[rbp]
  00162	45 33 c0	 xor	 r8d, r8d
  00165	48 8d 55 28	 lea	 rdx, QWORD PTR uploadHeapProperties$[rbp]
  00169	48 8b 8d d8 01
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  00170	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR tv166[rbp]
  00177	ff 90 d8 00 00
	00		 call	 QWORD PTR [rax+216]
  0017d	89 85 a4 00 00
	00		 mov	 DWORD PTR res$[rbp], eax

; 63   :                                                         &uploadResourceDescription, D3D12_RESOURCE_STATE_GENERIC_READ,
; 64   :                                                         nullptr, IID_PPV_ARGS ( &uploadBuffer ) );
; 65   :     if ( FAILED ( res ) ) {

  00183	83 bd a4 00 00
	00 00		 cmp	 DWORD PTR res$[rbp], 0
  0018a	7d 2e		 jge	 SHORT $LN2@CreateUplo

; 66   :         assert ( !"Failed to create upload buffer resource" );

  0018c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CI@JEEPPCIG@Failed?5to?5create?5upload?5buffer?5r@
  00193	48 85 c0	 test	 rax, rax
  00196	74 22		 je	 SHORT $LN2@CreateUplo
  00198	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4JA
  0019e	83 c0 1c	 add	 eax, 28
  001a1	44 8b c0	 mov	 r8d, eax
  001a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LK@NMLGCBAA@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAh?$AAa?$AAe?$AAs?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2@
  001ab	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1FG@FMPOCDJG@?$AA?$CB?$AA?$CC?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAu?$AAp?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr@
  001b2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  001b8	33 c0		 xor	 eax, eax
$LN2@CreateUplo:

; 67   :     }
; 68   : 
; 69   :     return uploadBuffer;

  001ba	48 8d 55 08	 lea	 rdx, QWORD PTR uploadBuffer$[rbp]
  001be	48 8b 8d 18 02
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  001c5	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$QEAV012@@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
  001ca	8b 85 a4 01 00
	00		 mov	 eax, DWORD PTR $T7[rbp]
  001d0	83 c8 01	 or	 eax, 1
  001d3	89 85 a4 01 00
	00		 mov	 DWORD PTR $T7[rbp], eax
  001d9	48 8d 4d 08	 lea	 rcx, QWORD PTR uploadBuffer$[rbp]
  001dd	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
  001e2	48 8b 85 18 02
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 70   : }

  001e9	48 8b f8	 mov	 rdi, rax
  001ec	48 8d 4d c0	 lea	 rcx, QWORD PTR [rbp-64]
  001f0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcFrameData
  001f7	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001fc	48 8b c7	 mov	 rax, rdi
  001ff	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00206	48 33 cd	 xor	 rcx, rbp
  00209	e8 00 00 00 00	 call	 __security_check_cookie
  0020e	48 8d a5 f8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+504]
  00215	5f		 pop	 rdi
  00216	5d		 pop	 rbp
  00217	c3		 ret	 0
?CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z ENDP ; FatDXFramework::CreateUploadBuffer
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
uploadBuffer$ = 8
uploadHeapProperties$ = 40
uploadResourceDescription$ = 88
res$ = 164
$T6 = 392
$T7 = 420
$T8 = 456
tv78 = 472
tv166 = 480
__$ArrayPad$ = 488
this$ = 528
__$ReturnUdt$ = 536
bufferSize$ = 544
?dtor$0@?0??CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA PROC ; `FatDXFramework::CreateUploadBuffer'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 40	 lea	 rbp, QWORD PTR [rdx+64]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR uploadBuffer$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA ENDP ; `FatDXFramework::CreateUploadBuffer'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
uploadBuffer$ = 8
uploadHeapProperties$ = 40
uploadResourceDescription$ = 88
res$ = 164
$T6 = 392
$T7 = 420
$T8 = 456
tv78 = 472
tv166 = 480
__$ArrayPad$ = 488
this$ = 528
__$ReturnUdt$ = 536
bufferSize$ = 544
?dtor$0@?0??CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA PROC ; `FatDXFramework::CreateUploadBuffer'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 40	 lea	 rbp, QWORD PTR [rdx+64]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR uploadBuffer$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??CreateUploadBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA ENDP ; `FatDXFramework::CreateUploadBuffer'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\khaes\documents\github\pathtracing_lightmap\fatengine\fatdxresourcemanipulation.cpp
;	COMDAT ?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z
_TEXT	SEGMENT
gpuBuffer$ = 8
defHeapProperties$ = 40
defResourceDescription$ = 88
res$ = 164
$T6 = 392
$T7 = 420
$T8 = 456
tv78 = 472
tv166 = 480
__$ArrayPad$ = 488
this$ = 528
__$ReturnUdt$ = 536
bufferSize$ = 544
?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z PROC ; FatDXFramework::CreateGpuBuffer, COMDAT

; 4    : ComPtr<ID3D12Resource> FatDXFramework::CreateGpuBuffer ( const UINT64 &     bufferSize ) {

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 38 02
	00 00		 sub	 rsp, 568		; 00000238H
  00018	48 8d 6c 24 40	 lea	 rbp, QWORD PTR [rsp+64]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 8e 00 00 00	 mov	 ecx, 142		; 0000008eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 58
	02 00 00	 mov	 rcx, QWORD PTR [rsp+600]
  00034	48 c7 85 c8 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T8[rbp], -2
  0003f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00046	48 33 c5	 xor	 rax, rbp
  00049	48 89 85 e8 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00050	c7 85 a4 01 00
	00 00 00 00 00	 mov	 DWORD PTR $T7[rbp], 0

; 5    :     // This buffer represents real allocated memory on GPU
; 6    :     ComPtr<ID3D12Resource> gpuBuffer               = nullptr;

  0005a	ba 08 00 00 00	 mov	 edx, 8
  0005f	48 8d 4d 08	 lea	 rcx, QWORD PTR gpuBuffer$[rbp]
  00063	e8 00 00 00 00	 call	 ?__autoclassinit2@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAX_K@Z
  00068	33 d2		 xor	 edx, edx
  0006a	48 8d 4d 08	 lea	 rcx, QWORD PTR gpuBuffer$[rbp]
  0006e	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$T@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
  00073	90		 npad	 1

; 7    :     D3D12_HEAP_PROPERTIES                          defHeapProperties;
; 8    :     defHeapProperties.Type                         = D3D12_HEAP_TYPE_DEFAULT;

  00074	c7 45 28 01 00
	00 00		 mov	 DWORD PTR defHeapProperties$[rbp], 1

; 9    :     defHeapProperties.CPUPageProperty              = D3D12_CPU_PAGE_PROPERTY_UNKNOWN;

  0007b	c7 45 2c 00 00
	00 00		 mov	 DWORD PTR defHeapProperties$[rbp+4], 0

; 10   :     defHeapProperties.MemoryPoolPreference         = D3D12_MEMORY_POOL_UNKNOWN;

  00082	c7 45 30 00 00
	00 00		 mov	 DWORD PTR defHeapProperties$[rbp+8], 0

; 11   :     defHeapProperties.CreationNodeMask             = 1;

  00089	c7 45 34 01 00
	00 00		 mov	 DWORD PTR defHeapProperties$[rbp+12], 1

; 12   :     defHeapProperties.VisibleNodeMask              = 1;

  00090	c7 45 38 01 00
	00 00		 mov	 DWORD PTR defHeapProperties$[rbp+16], 1

; 13   : 
; 14   :     D3D12_RESOURCE_DESC                            defResourceDescription;
; 15   :     defResourceDescription.Dimension               = D3D12_RESOURCE_DIMENSION_BUFFER;

  00097	c7 45 58 01 00
	00 00		 mov	 DWORD PTR defResourceDescription$[rbp], 1

; 16   :     defResourceDescription.Format                  = DXGI_FORMAT_UNKNOWN;

  0009e	c7 45 78 00 00
	00 00		 mov	 DWORD PTR defResourceDescription$[rbp+32], 0

; 17   :     defResourceDescription.Width                   = bufferSize;

  000a5	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR bufferSize$[rbp]
  000ac	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000af	48 89 45 68	 mov	 QWORD PTR defResourceDescription$[rbp+16], rax

; 18   :     defResourceDescription.SampleDesc.Count        = 1;

  000b3	c7 45 7c 01 00
	00 00		 mov	 DWORD PTR defResourceDescription$[rbp+36], 1

; 19   :     defResourceDescription.SampleDesc.Quality      = 0;

  000ba	c7 85 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR defResourceDescription$[rbp+40], 0

; 20   :     defResourceDescription.Alignment               = D3D12_DEFAULT_RESOURCE_PLACEMENT_ALIGNMENT;

  000c4	48 c7 45 60 00
	00 01 00	 mov	 QWORD PTR defResourceDescription$[rbp+8], 65536 ; 00010000H

; 21   :     defResourceDescription.DepthOrArraySize        = 1;

  000cc	b8 01 00 00 00	 mov	 eax, 1
  000d1	66 89 45 74	 mov	 WORD PTR defResourceDescription$[rbp+28], ax

; 22   :     defResourceDescription.Height                  = 1;

  000d5	c7 45 70 01 00
	00 00		 mov	 DWORD PTR defResourceDescription$[rbp+24], 1

; 23   :     defResourceDescription.MipLevels               = 1;

  000dc	b8 01 00 00 00	 mov	 eax, 1
  000e1	66 89 45 76	 mov	 WORD PTR defResourceDescription$[rbp+30], ax

; 24   :     defResourceDescription.Flags                   = D3D12_RESOURCE_FLAG_NONE;

  000e5	c7 85 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR defResourceDescription$[rbp+48], 0

; 25   :     defResourceDescription.Layout                  = D3D12_TEXTURE_LAYOUT_ROW_MAJOR;

  000ef	c7 85 84 00 00
	00 01 00 00 00	 mov	 DWORD PTR defResourceDescription$[rbp+44], 1

; 26   : 
; 27   :     HRESULT res = m_Device_->CreateCommittedResource ( &defHeapProperties, D3D12_HEAP_FLAG_NONE,

  000f9	48 8b 85 10 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00100	48 83 c0 20	 add	 rax, 32			; 00000020H
  00104	48 8b c8	 mov	 rcx, rax
  00107	e8 00 00 00 00	 call	 ??C?$ComPtr@UID3D12Device@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Device@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Device>::operator->
  0010c	48 89 85 d8 01
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  00113	48 8d 95 88 01
	00 00		 lea	 rdx, QWORD PTR $T6[rbp]
  0011a	48 8d 4d 08	 lea	 rcx, QWORD PTR gpuBuffer$[rbp]
  0011e	e8 00 00 00 00	 call	 ??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator&
  00123	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00126	e8 00 00 00 00	 call	 ??$IID_PPV_ARGS_Helper@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@@YAPEAPEAXV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z ; IID_PPV_ARGS_Helper<Microsoft::WRL::ComPtr<ID3D12Resource> >
  0012b	48 8b 8d d8 01
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  00132	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00135	48 89 8d e0 01
	00 00		 mov	 QWORD PTR tv166[rbp], rcx
  0013c	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00141	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_GUID_696442be_a72e_4059_bc79_5b5c98040fad
  00148	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0014d	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  00156	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  0015e	4c 8d 4d 58	 lea	 r9, QWORD PTR defResourceDescription$[rbp]
  00162	45 33 c0	 xor	 r8d, r8d
  00165	48 8d 55 28	 lea	 rdx, QWORD PTR defHeapProperties$[rbp]
  00169	48 8b 8d d8 01
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  00170	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR tv166[rbp]
  00177	ff 90 d8 00 00
	00		 call	 QWORD PTR [rax+216]
  0017d	89 85 a4 00 00
	00		 mov	 DWORD PTR res$[rbp], eax

; 28   :                                                        &defResourceDescription, D3D12_RESOURCE_STATE_COMMON,
; 29   :                                                        nullptr, IID_PPV_ARGS ( &gpuBuffer ) );
; 30   :     if ( FAILED ( res ) ) {

  00183	83 bd a4 00 00
	00 00		 cmp	 DWORD PTR res$[rbp], 0
  0018a	7d 2e		 jge	 SHORT $LN2@CreateGpuB

; 31   :         assert ( !"Failed to create GPU buffer resource" );

  0018c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CF@EDPCMKEP@Failed?5to?5create?5GPU?5buffer?5reso@
  00193	48 85 c0	 test	 rax, rax
  00196	74 22		 je	 SHORT $LN2@CreateGpuB
  00198	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4JA
  0019e	83 c0 1b	 add	 eax, 27
  001a1	44 8b c0	 mov	 r8d, eax
  001a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LK@NMLGCBAA@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAk?$AAh?$AAa?$AAe?$AAs?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2@
  001ab	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1FA@MEFELNMF@?$AA?$CB?$AA?$CC?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAG?$AAP?$AAU?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAr?$AAe@
  001b2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  001b8	33 c0		 xor	 eax, eax
$LN2@CreateGpuB:

; 32   :     }
; 33   :     return gpuBuffer;

  001ba	48 8d 55 08	 lea	 rdx, QWORD PTR gpuBuffer$[rbp]
  001be	48 8b 8d 18 02
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  001c5	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$QEAV012@@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
  001ca	8b 85 a4 01 00
	00		 mov	 eax, DWORD PTR $T7[rbp]
  001d0	83 c8 01	 or	 eax, 1
  001d3	89 85 a4 01 00
	00		 mov	 DWORD PTR $T7[rbp], eax
  001d9	48 8d 4d 08	 lea	 rcx, QWORD PTR gpuBuffer$[rbp]
  001dd	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
  001e2	48 8b 85 18 02
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 34   : }

  001e9	48 8b f8	 mov	 rdi, rax
  001ec	48 8d 4d c0	 lea	 rcx, QWORD PTR [rbp-64]
  001f0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z$rtcFrameData
  001f7	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001fc	48 8b c7	 mov	 rax, rdi
  001ff	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00206	48 33 cd	 xor	 rcx, rbp
  00209	e8 00 00 00 00	 call	 __security_check_cookie
  0020e	48 8d a5 f8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+504]
  00215	5f		 pop	 rdi
  00216	5d		 pop	 rbp
  00217	c3		 ret	 0
?CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z ENDP ; FatDXFramework::CreateGpuBuffer
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
gpuBuffer$ = 8
defHeapProperties$ = 40
defResourceDescription$ = 88
res$ = 164
$T6 = 392
$T7 = 420
$T8 = 456
tv78 = 472
tv166 = 480
__$ArrayPad$ = 488
this$ = 528
__$ReturnUdt$ = 536
bufferSize$ = 544
?dtor$0@?0??CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA PROC ; `FatDXFramework::CreateGpuBuffer'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 40	 lea	 rbp, QWORD PTR [rdx+64]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR gpuBuffer$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA ENDP ; `FatDXFramework::CreateGpuBuffer'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
gpuBuffer$ = 8
defHeapProperties$ = 40
defResourceDescription$ = 88
res$ = 164
$T6 = 392
$T7 = 420
$T8 = 456
tv78 = 472
tv166 = 480
__$ArrayPad$ = 488
this$ = 528
__$ReturnUdt$ = 536
bufferSize$ = 544
?dtor$0@?0??CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA PROC ; `FatDXFramework::CreateGpuBuffer'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 40	 lea	 rbp, QWORD PTR [rdx+64]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR gpuBuffer$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??CreateGpuBuffer@FatDXFramework@@AEAA?AV?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@AEB_K@Z@4HA ENDP ; `FatDXFramework::CreateGpuBuffer'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAX_K@Z PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::__autoclassinit2, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b bd e0 00
	00 00		 mov	 rdi, QWORD PTR this$[rbp]
  00034	33 c0		 xor	 eax, eax
  00036	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR classSize$[rbp]
  0003d	f3 aa		 rep stosb
  0003f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?__autoclassinit2@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAX_K@Z ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Resource@@XZ
_TEXT	SEGMENT
this$ = 224
?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Resource@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::ReleaseAndGetAddressOf, COMDAT

; 368  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 369  :         InternalRelease();

  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::InternalRelease

; 370  :         return &ptr_;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 371  :     }

  0003d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00044	5f		 pop	 rdi
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
?ReleaseAndGetAddressOf@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAPEAPEAUID3D12Resource@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::ReleaseAndGetAddressOf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator&, COMDAT

; 348  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 349  :         return Details::ComPtrRef<ComPtr<T>>(this);

  0002f	48 8b 95 e0 00
	00 00		 mov	 rdx, QWORD PTR this$[rbp]
  00036	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QEAA@PEAV?$ComPtr@UID3D12Resource@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D12Resource> >
  00042	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 350  :     }

  00049	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00050	5f		 pop	 rdi
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
??I?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA?AV?$ComPtrRef@V?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Resource@@@Details@12@XZ
_TEXT	SEGMENT
this$ = 224
??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Resource@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator->, COMDAT

; 336  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]

; 337  :         return static_cast<typename Details::RemoveIUnknown<InterfaceType>::ReturnType*>(ptr_);

  00028	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 338  :     }

  00032	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00039	5f		 pop	 rdi
  0003a	5d		 pop	 rbp
  0003b	c3		 ret	 0
??C?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Resource@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ
_TEXT	SEGMENT
this$ = 224
?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::Get, COMDAT

; 330  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]

; 331  :         return ptr_;

  00028	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 332  :     }

  00032	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00039	5f		 pop	 rdi
  0003a	5d		 pop	 rbp
  0003b	c3		 ret	 0
?Get@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEBAPEAUID3D12Resource@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ?Swap@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAXAEAV123@@Z
_TEXT	SEGMENT
tmp$ = 8
this$ = 256
r$ = 264
?Swap@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAXAEAV123@@Z PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::Swap, COMDAT

; 317  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 318  :         T* tmp = ptr_;

  0002d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00037	48 89 45 08	 mov	 QWORD PTR tmp$[rbp], rax

; 319  :         ptr_ = r.ptr_;

  0003b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR r$[rbp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 320  :         r.ptr_ = tmp;

  0004f	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR r$[rbp]
  00056	48 8b 4d 08	 mov	 rcx, QWORD PTR tmp$[rbp]
  0005a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 321  :     }

  0005d	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00064	5f		 pop	 rdi
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
?Swap@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAXAEAV123@@Z ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ??4?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAAEAV012@$$QEAV012@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
other$ = 264
??4?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAAEAV012@$$QEAV012@@Z PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator=, COMDAT

; 295  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]

; 296  :         ComPtr(static_cast<ComPtr&&>(other)).Swap(*this);

  0002f	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR other$[rbp]
  00036	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0003d	e8 00 00 00 00	 call	 ??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$QEAV012@@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
  00042	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR this$[rbp]
  00049	48 8b c8	 mov	 rcx, rax
  0004c	e8 00 00 00 00	 call	 ?Swap@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAXAEAV123@@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::Swap
  00051	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00058	e8 00 00 00 00	 call	 ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>

; 297  :         return *this;

  0005d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 298  :     }

  00064	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006b	5f		 pop	 rdi
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??4?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAAEAV012@$$QEAV012@@Z ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>, COMDAT

; 250  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 251  :         InternalRelease();

  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<ID3D12Resource>::InternalRelease

; 252  :     }

  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::~ComPtr<ID3D12Resource>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$QEAV012@@Z
_TEXT	SEGMENT
this$ = 224
other$ = 232
??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$QEAV012@@Z PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>, COMDAT

; 232  :     {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 231  :     ComPtr(_Inout_ ComPtr &&other) throw() : ptr_(nullptr)

  0002f	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00036	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 233  :         if (this != reinterpret_cast<ComPtr*>(&reinterpret_cast<unsigned char&>(other)))

  0003d	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR other$[rbp]
  00044	48 39 85 e0 00
	00 00		 cmp	 QWORD PTR this$[rbp], rax
  0004b	74 13		 je	 SHORT $LN2@ComPtr

; 234  :         {
; 235  :             Swap(other);

  0004d	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR other$[rbp]
  00054	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005b	e8 00 00 00 00	 call	 ?Swap@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAAXAEAV123@@Z ; Microsoft::WRL::ComPtr<ID3D12Resource>::Swap
$LN2@ComPtr:

; 236  :         }
; 237  :     }

  00060	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00067	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$QEAV012@@Z ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$T@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$T@Z PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>, COMDAT

; 209  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]

; 208  :     ComPtr(decltype(__nullptr)) throw() : ptr_(nullptr)

  0002d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00034	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 210  :     }

  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??0?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@QEAA@$$T@Z ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::ComPtr<ID3D12Resource>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 4
temp$ = 40
this$ = 288
?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<ID3D12Resource>::InternalRelease, COMDAT

; 189  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]

; 190  :         unsigned long ref = 0;

  0002a	c7 45 04 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 191  :         T* temp = ptr_;

  00031	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003b	48 89 45 28	 mov	 QWORD PTR temp$[rbp], rax

; 192  : 
; 193  :         if (temp != nullptr)

  0003f	48 83 7d 28 00	 cmp	 QWORD PTR temp$[rbp], 0
  00044	74 1f		 je	 SHORT $LN2@InternalRe

; 194  :         {
; 195  :             ptr_ = nullptr;

  00046	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 196  :             ref = temp->Release();

  00054	48 8b 45 28	 mov	 rax, QWORD PTR temp$[rbp]
  00058	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005b	48 8b 4d 28	 mov	 rcx, QWORD PTR temp$[rbp]
  0005f	ff 50 10	 call	 QWORD PTR [rax+16]
  00062	89 45 04	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 197  :         }
; 198  : 
; 199  :         return ref;

  00065	8b 45 04	 mov	 eax, DWORD PTR ref$[rbp]

; 200  :     }

  00068	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?InternalRelease@?$ComPtr@UID3D12Resource@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Resource>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ??C?$ComPtr@UID3D12GraphicsCommandList@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12GraphicsCommandList@@@Details@12@XZ
_TEXT	SEGMENT
this$ = 224
??C?$ComPtr@UID3D12GraphicsCommandList@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12GraphicsCommandList@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList>::operator->, COMDAT

; 336  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]

; 337  :         return static_cast<typename Details::RemoveIUnknown<InterfaceType>::ReturnType*>(ptr_);

  00028	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 338  :     }

  00032	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00039	5f		 pop	 rdi
  0003a	5d		 pop	 rbp
  0003b	c3		 ret	 0
??C?$ComPtr@UID3D12GraphicsCommandList@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12GraphicsCommandList@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12GraphicsCommandList>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ??C?$ComPtr@UID3D12Device@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Device@@@Details@12@XZ
_TEXT	SEGMENT
this$ = 224
??C?$ComPtr@UID3D12Device@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Device@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D12Device>::operator->, COMDAT

; 336  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]

; 337  :         return static_cast<typename Details::RemoveIUnknown<InterfaceType>::ReturnType*>(ptr_);

  00028	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 338  :     }

  00032	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00039	5f		 pop	 rdi
  0003a	5d		 pop	 rbp
  0003b	c3		 ret	 0
??C?$ComPtr@UID3D12Device@@@WRL@Microsoft@@QEBAPEAV?$RemoveIUnknownBase@UID3D12Device@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D12Device>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z PROC ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor', COMDAT
$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00034	83 e0 02	 and	 eax, 2
  00037	85 c0		 test	 eax, eax
  00039	74 63		 je	 SHORT $LN2@vector
  0003b	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	4c 8b 40 f8	 mov	 r8, QWORD PTR [rax-8]
  0004d	ba 08 00 00 00	 mov	 edx, 8
  00052	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00059	e8 00 00 00 00	 call	 ??_M@YAXPEAX_K1P6AX0@Z@Z
  0005e	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00064	83 e0 01	 and	 eax, 1
  00067	85 c0		 test	 eax, eax
  00069	74 26		 je	 SHORT $LN3@vector
  0006b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00072	48 8b 40 f8	 mov	 rax, QWORD PTR [rax-8]
  00076	48 8d 04 c5 08
	00 00 00	 lea	 rax, QWORD PTR [rax*8+8]
  0007e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00085	48 83 e9 08	 sub	 rcx, 8
  00089	48 8b d0	 mov	 rdx, rax
  0008c	e8 00 00 00 00	 call	 ??_V@YAXPEAX_K@Z	; operator delete[]
$LN3@vector:
  00091	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00098	48 83 e8 08	 sub	 rax, 8
  0009c	eb 31		 jmp	 SHORT $LN1@vector
$LN2@vector:
  0009e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000a5	e8 00 00 00 00	 call	 ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
  000aa	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  000b0	83 e0 01	 and	 eax, 1
  000b3	85 c0		 test	 eax, eax
  000b5	74 11		 je	 SHORT $LN4@vector
  000b7	ba 08 00 00 00	 mov	 edx, 8
  000bc	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000c3	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN4@vector:
  000c8	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
$LN1@vector:
  000cf	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  000d6	5f		 pop	 rdi
  000d7	5d		 pop	 rbp
  000d8	c3		 ret	 0
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAPEAXI@Z ENDP ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ PROC	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>, COMDAT

; 250  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 251  :         InternalRelease();

  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease

; 252  :     }

  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ ENDP	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\winrt\wrl\client.h
;	COMDAT ?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ
_TEXT	SEGMENT
ref$ = 4
temp$ = 40
this$ = 288
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ PROC ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease, COMDAT

; 189  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]

; 190  :         unsigned long ref = 0;

  0002a	c7 45 04 00 00
	00 00		 mov	 DWORD PTR ref$[rbp], 0

; 191  :         T* temp = ptr_;

  00031	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00038	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003b	48 89 45 28	 mov	 QWORD PTR temp$[rbp], rax

; 192  : 
; 193  :         if (temp != nullptr)

  0003f	48 83 7d 28 00	 cmp	 QWORD PTR temp$[rbp], 0
  00044	74 1f		 je	 SHORT $LN2@InternalRe

; 194  :         {
; 195  :             ptr_ = nullptr;

  00046	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 196  :             ref = temp->Release();

  00054	48 8b 45 28	 mov	 rax, QWORD PTR temp$[rbp]
  00058	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005b	48 8b 4d 28	 mov	 rcx, QWORD PTR temp$[rbp]
  0005f	ff 50 10	 call	 QWORD PTR [rax+16]
  00062	89 45 04	 mov	 DWORD PTR ref$[rbp], eax
$LN2@InternalRe:

; 197  :         }
; 198  : 
; 199  :         return ref;

  00065	8b 45 04	 mov	 eax, DWORD PTR ref$[rbp]

; 200  :     }

  00068	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ ENDP ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\khaes\documents\github\pathtracing_lightmap\fatengine\fatdxresourcemanipulation.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

; 130  : }

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00034	5f		 pop	 rdi
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\khaes\documents\github\pathtracing_lightmap\fatengine\fatdxresourcemanipulation.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

; 130  : }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  00028	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0002f	5f		 pop	 rdi
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
